name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 12 * * 0'

jobs:

  build_sdist_and_wheel:
    name: Build sdist and wheel
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build requirements
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake
          pip install --upgrade -r build_requirements.txt

      - name: make
        shell: bash
        run: |
          python -m build

      - name: upload sdist and wheel
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install wheel
        run: |
          pip install dist/*.whl

      - name: Install test requirements & set configuration variables
        run: |
          pip install -r test_requirements.txt
          echo "CASM_PREFIX=$(python -m libcasm.casmglobal --prefix)" >> "$GITHUB_ENV"
          CASM_CXXFLAGS="-O3 -Wall -fPIC --std=c++17 -D_GLIBCXX_USE_CXX11_ABI=0 "
          echo "CASM_CXXFLAGS=${CASM_CXXFLAGS}" >> "$GITHUB_ENV"
          CASM_SOFLAGS="-shared -Wl,--no-as-needed"
          echo "CASM_SOFLAGS=${CASM_SOFLAGS}" >> "$GITHUB_ENV"

      - name: make test
        shell: bash
        run: |
          python -m pytest -rsap tests

      - name: Install doc requirements
        run: |
          pip install -r doc_requirements.txt

      - name: build docs
        shell: bash
        run: |
          cd doc
          sphinx-build -b html . _build/html

      - name: upload docs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: libcasm-bset-docs
          path: doc/_build/html
